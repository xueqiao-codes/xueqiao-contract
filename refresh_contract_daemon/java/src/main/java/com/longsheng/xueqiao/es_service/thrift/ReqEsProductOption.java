/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.es_service.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReqEsProductOption implements org.apache.thrift.TBase<ReqEsProductOption, ReqEsProductOption._Fields>, java.io.Serializable, Cloneable, Comparable<ReqEsProductOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReqEsProductOption");

  private static final org.apache.thrift.protocol.TField PRODUCT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("productIds", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField PAGE_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("pageOption", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReqEsProductOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReqEsProductOptionTupleSchemeFactory());
  }

  public List<String> productIds; // optional
  public com.longsheng.xueqiao.standard.thriftapi.PageOption pageOption; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_IDS((short)1, "productIds"),
    PAGE_OPTION((short)2, "pageOption");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_IDS
          return PRODUCT_IDS;
        case 2: // PAGE_OPTION
          return PAGE_OPTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.PRODUCT_IDS,_Fields.PAGE_OPTION};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_IDS, new org.apache.thrift.meta_data.FieldMetaData("productIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.PAGE_OPTION, new org.apache.thrift.meta_data.FieldMetaData("pageOption", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.longsheng.xueqiao.standard.thriftapi.PageOption.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReqEsProductOption.class, metaDataMap);
  }

  public ReqEsProductOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReqEsProductOption(ReqEsProductOption other) {
    if (other.isSetProductIds()) {
      List<String> __this__productIds = new ArrayList<String>(other.productIds);
      this.productIds = __this__productIds;
    }
    if (other.isSetPageOption()) {
      this.pageOption = new com.longsheng.xueqiao.standard.thriftapi.PageOption(other.pageOption);
    }
  }

  public ReqEsProductOption deepCopy() {
    return new ReqEsProductOption(this);
  }

  @Override
  public void clear() {
    this.productIds = null;
    this.pageOption = null;
  }

  public int getProductIdsSize() {
    return (this.productIds == null) ? 0 : this.productIds.size();
  }

  public java.util.Iterator<String> getProductIdsIterator() {
    return (this.productIds == null) ? null : this.productIds.iterator();
  }

  public void addToProductIds(String elem) {
    if (this.productIds == null) {
      this.productIds = new ArrayList<String>();
    }
    this.productIds.add(elem);
  }

  public List<String> getProductIds() {
    return this.productIds;
  }

  public ReqEsProductOption setProductIds(List<String> productIds) {
    this.productIds = productIds;
    return this;
  }

  public void unsetProductIds() {
    this.productIds = null;
  }

  /** Returns true if field productIds is set (has been assigned a value) and false otherwise */
  public boolean isSetProductIds() {
    return this.productIds != null;
  }

  public void setProductIdsIsSet(boolean value) {
    if (!value) {
      this.productIds = null;
    }
  }

  public com.longsheng.xueqiao.standard.thriftapi.PageOption getPageOption() {
    return this.pageOption;
  }

  public ReqEsProductOption setPageOption(com.longsheng.xueqiao.standard.thriftapi.PageOption pageOption) {
    this.pageOption = pageOption;
    return this;
  }

  public void unsetPageOption() {
    this.pageOption = null;
  }

  /** Returns true if field pageOption is set (has been assigned a value) and false otherwise */
  public boolean isSetPageOption() {
    return this.pageOption != null;
  }

  public void setPageOptionIsSet(boolean value) {
    if (!value) {
      this.pageOption = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PRODUCT_IDS:
      if (value == null) {
        unsetProductIds();
      } else {
        setProductIds((List<String>)value);
      }
      break;

    case PAGE_OPTION:
      if (value == null) {
        unsetPageOption();
      } else {
        setPageOption((com.longsheng.xueqiao.standard.thriftapi.PageOption)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_IDS:
      return getProductIds();

    case PAGE_OPTION:
      return getPageOption();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_IDS:
      return isSetProductIds();
    case PAGE_OPTION:
      return isSetPageOption();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReqEsProductOption)
      return this.equals((ReqEsProductOption)that);
    return false;
  }

  public boolean equals(ReqEsProductOption that) {
    if (that == null)
      return false;

    boolean this_present_productIds = true && this.isSetProductIds();
    boolean that_present_productIds = true && that.isSetProductIds();
    if (this_present_productIds || that_present_productIds) {
      if (!(this_present_productIds && that_present_productIds))
        return false;
      if (!this.productIds.equals(that.productIds))
        return false;
    }

    boolean this_present_pageOption = true && this.isSetPageOption();
    boolean that_present_pageOption = true && that.isSetPageOption();
    if (this_present_pageOption || that_present_pageOption) {
      if (!(this_present_pageOption && that_present_pageOption))
        return false;
      if (!this.pageOption.equals(that.pageOption))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ReqEsProductOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProductIds()).compareTo(other.isSetProductIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productIds, other.productIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageOption()).compareTo(other.isSetPageOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageOption, other.pageOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReqEsProductOption(");
    boolean first = true;

    if (isSetProductIds()) {
      sb.append("productIds:");
      if (this.productIds == null) {
        sb.append("null");
      } else {
        sb.append(this.productIds);
      }
      first = false;
    }
    if (isSetPageOption()) {
      if (!first) sb.append(", ");
      sb.append("pageOption:");
      if (this.pageOption == null) {
        sb.append("null");
      } else {
        sb.append(this.pageOption);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (pageOption != null) {
      pageOption.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReqEsProductOptionStandardSchemeFactory implements SchemeFactory {
    public ReqEsProductOptionStandardScheme getScheme() {
      return new ReqEsProductOptionStandardScheme();
    }
  }

  private static class ReqEsProductOptionStandardScheme extends StandardScheme<ReqEsProductOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReqEsProductOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                struct.productIds = new ArrayList<String>(_list56.size);
                for (int _i57 = 0; _i57 < _list56.size; ++_i57)
                {
                  String _elem58;
                  _elem58 = iprot.readString();
                  struct.productIds.add(_elem58);
                }
                iprot.readListEnd();
              }
              struct.setProductIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PAGE_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pageOption = new com.longsheng.xueqiao.standard.thriftapi.PageOption();
              struct.pageOption.read(iprot);
              struct.setPageOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReqEsProductOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productIds != null) {
        if (struct.isSetProductIds()) {
          oprot.writeFieldBegin(PRODUCT_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.productIds.size()));
            for (String _iter59 : struct.productIds)
            {
              oprot.writeString(_iter59);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.pageOption != null) {
        if (struct.isSetPageOption()) {
          oprot.writeFieldBegin(PAGE_OPTION_FIELD_DESC);
          struct.pageOption.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReqEsProductOptionTupleSchemeFactory implements SchemeFactory {
    public ReqEsProductOptionTupleScheme getScheme() {
      return new ReqEsProductOptionTupleScheme();
    }
  }

  private static class ReqEsProductOptionTupleScheme extends TupleScheme<ReqEsProductOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReqEsProductOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProductIds()) {
        optionals.set(0);
      }
      if (struct.isSetPageOption()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetProductIds()) {
        {
          oprot.writeI32(struct.productIds.size());
          for (String _iter60 : struct.productIds)
          {
            oprot.writeString(_iter60);
          }
        }
      }
      if (struct.isSetPageOption()) {
        struct.pageOption.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReqEsProductOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.productIds = new ArrayList<String>(_list61.size);
          for (int _i62 = 0; _i62 < _list61.size; ++_i62)
          {
            String _elem63;
            _elem63 = iprot.readString();
            struct.productIds.add(_elem63);
          }
        }
        struct.setProductIdsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.pageOption = new com.longsheng.xueqiao.standard.thriftapi.PageOption();
        struct.pageOption.read(iprot);
        struct.setPageOptionIsSet(true);
      }
    }
  }

}

